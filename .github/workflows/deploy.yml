name: CI/CD Pipeline for Docker Swarm Deployment with Rollback

on:
  push:
    branches:
      - main

jobs:
  deploy:
    name: Build, Push Docker Image, Deploy to Swarm, and Rollback on Failure
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: nishankkoul/pearlthoughts-devops-assignment
      COMPOSE_FILE: docker-compose.yml
      SSH_PRIVATE_KEY: ${{ secrets.EC2_SSH_KEY }}
      SSH_USER: ${{ secrets.EC2_USER }}
      SSH_HOST: ${{ secrets.EC2_HOST }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Get Latest Image Tag
        id: latest_tag
        run: |
          tags=$(curl -s https://hub.docker.com/v2/repositories/${{ env.IMAGE_NAME }}/tags/?page_size=100 | jq -r '.results[].name')
          latest=$(echo "$tags" | grep -E '^[0-9]+\.[0-9]+$' | sort -V | tail -n1)
          echo "Latest tag: $latest"
          echo "latest_tag=$latest" >> $GITHUB_ENV

      - name: Calculate New Tag
        id: new_tag
        run: |
          if [ -z "${{ env.latest_tag }}" ]; then
            new_tag="1.0"
          else
            new_tag=$(awk "BEGIN {print ${{ env.latest_tag }} + 0.1}")
          fi
          echo "New tag: $new_tag"
          echo "new_tag=$new_tag" >> $GITHUB_ENV

      - name: Build Docker Image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ env.new_tag }} .

      - name: Push Docker Image
        run: |
          docker push ${{ env.IMAGE_NAME }}:${{ env.new_tag }}

      - name: Update docker-compose.yml with New Image Tag
        run: |
          sed -i "s|${{ env.IMAGE_NAME }}:.*|${{ env.IMAGE_NAME }}:${{ env.new_tag }}|" ${{ env.COMPOSE_FILE }}
          cat ${{ env.COMPOSE_FILE }}

      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add docker-compose.yml
          git commit -m "Update image tag to ${{ env.new_tag }} [skip ci]" || echo "No changes to commit"
          git remote set-url origin https://${{ secrets.GITHUB_TOKEN }}@github.com/nishankkoul/pearlthoughts-assignment.git
          git push origin main

      - name: SSH into EC2 and Deploy
        id: deploy_app
        uses: appleboy/ssh-action@v0.1.7
        continue-on-error: true  # <--- IMPORTANT: Don't fail pipeline immediately
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            set -e
            cd hello-world-yii2
            git pull origin main
            docker pull ${{ env.IMAGE_NAME }}:${{ env.new_tag }}
            docker stack deploy -c docker-compose.yml myapp

      - name: Rollback if Deployment Failed
        if: steps.deploy_app.outcome == 'failure'
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ env.SSH_HOST }}
          username: ${{ env.SSH_USER }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          script: |
            echo "Deployment failed! Rolling back to previous version..."
            cd hello-world-yii2
            sed -i "s|${{ env.IMAGE_NAME }}:${{ env.new_tag }}|${{ env.IMAGE_NAME }}:${{ env.latest_tag }}|" ${{ env.COMPOSE_FILE }}
            git checkout -- docker-compose.yml  # Reset the compose file
            docker pull ${{ env.IMAGE_NAME }}:${{ env.latest_tag }}
            docker stack deploy -c docker-compose.yml myapp
            echo "Rollback to version ${{ env.latest_tag }} completed!"
